/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.text.SimpleDateFormat;
import back.Battle;
import java.util.GregorianCalendar;
import java.util.Calendar;
import java.util.LinkedList;
import back.Schedule;
/**
 *
 * @author Isabelle
 */
public class ScheduleFrame extends javax.swing.JFrame {

    private static GregorianCalendar DATE = new GregorianCalendar();
    /**
     * Creates new form ScheduleFrame
     */
    public ScheduleFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        battleList = new javax.swing.JList<>();
        dateLabel = new javax.swing.JLabel();

        titleLabel.setFont(titleLabel.getFont().deriveFont(titleLabel.getFont().getSize()+10f));
        titleLabel.setText("h");

        addButton.setText("add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setText("edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(battleList);

        dateLabel.setText("h");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dateLabel)
                        .addGap(27, 27, 27)
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addGap(0, 150, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        Battle send = new Battle("", "", "", DATE);

        AddOrEditBattleFrame go = new AddOrEditBattleFrame();
        AddOrEditBattleFrame.setVariables(send, false, DATE);
        go.setVisible(true);
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        Battle fight = new Battle("","","",DATE);
        fight = (Battle) battleList.getSelectedValue();
        if(fight != null)
        {
            Schedule sched = new Schedule();
            if(sched.loadScheduleFromStorageFile())
            {  
               if(sched.deleteFromSchedule(fight))
               {
                   sched.writeScheduleToStorageFile();
                   ScheduleFrame.setBattleList(DATE);
               }
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        Battle send = new Battle("","","",DATE);
        send = (Battle) battleList.getSelectedValue();
        if(send != null)
        {
            AddOrEditBattleFrame go = new AddOrEditBattleFrame();
            AddOrEditBattleFrame.setVariables(send, true, DATE);
            go.setVisible(true);
        }
        
    }//GEN-LAST:event_editButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScheduleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScheduleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScheduleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScheduleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScheduleFrame().setVisible(true);
            }
        });
    }
    
    public static void setBattleList(GregorianCalendar day)
    {
        DATE = day;
        SimpleDateFormat fmtTime = new SimpleDateFormat("MM/dd/YYYY");
        String dateString = fmtTime.format(DATE.getTime());
        dateLabel.setText(dateString);
        try{
            LinkedList<Battle> temp = ScheduleFrame.getBattlesInDay();
            Object[] fightsToday = new Battle[temp.size()];
            if(temp.size() > 0)
            {
                titleLabel.setText("BATTLES: ");
                fightsToday = temp.toArray();
                battleList.setListData(fightsToday);
            }
            else
            {
                titleLabel.setText("No Battles Today.");
                battleList.setListData(fightsToday);
            }
        }
        catch(NullPointerException e)
        {
            titleLabel.setText("No Battles Today.");
        }
    }
    
    private static LinkedList<Battle> getBattlesInDay() throws NullPointerException
    {
        SimpleDateFormat fmt = new SimpleDateFormat("MMM-yyyy");
        String monthYearKey = fmt.format(DATE.getTime());
        
        Schedule sched = new Schedule();
        LinkedList<Battle> month = new LinkedList();
        LinkedList<Battle> day = new LinkedList();
        
        if(sched.loadScheduleFromStorageFile())
        {
            try
            {
                month = sched.getBattlesFromMonth (monthYearKey);
                for(Battle fight : month)
                {
                    if(fight.getDay() == DATE.get(Calendar.DAY_OF_MONTH))
                    {
                        day.add(fight);
                    }
                }
            }
            catch(NullPointerException e)
            {
                throw e;
            }
        }
        return day;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private static javax.swing.JList<Object> battleList;
    private static javax.swing.JLabel dateLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
